/*
 * This file is generated by jOOQ.
 */
package ru.psu.taskforjob.jooq.tables.records;


import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.psu.taskforjob.jooq.tables.Employee;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record4<UUID, String, UUID, UUID> {

    private static final long serialVersionUID = 1323032400;

    /**
     * Setter for <code>public.Employee.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.Employee.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.Employee.WorkerName</code>.
     */
    public void setWorkername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.Employee.WorkerName</code>.
     */
    public String getWorkername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.Employee.idOrg</code>.
     */
    public void setIdorg(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.Employee.idOrg</code>.
     */
    public UUID getIdorg() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.Employee.idChief</code>.
     */
    public void setIdchief(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.Employee.idChief</code>.
     */
    public UUID getIdchief() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, UUID, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, UUID, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Employee.EMPLOYEE.ID;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.WORKERNAME;
    }

    @Override
    public Field<UUID> field3() {
        return Employee.EMPLOYEE.IDORG;
    }

    @Override
    public Field<UUID> field4() {
        return Employee.EMPLOYEE.IDCHIEF;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getWorkername();
    }

    @Override
    public UUID component3() {
        return getIdorg();
    }

    @Override
    public UUID component4() {
        return getIdchief();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getWorkername();
    }

    @Override
    public UUID value3() {
        return getIdorg();
    }

    @Override
    public UUID value4() {
        return getIdchief();
    }

    @Override
    public EmployeeRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setWorkername(value);
        return this;
    }

    @Override
    public EmployeeRecord value3(UUID value) {
        setIdorg(value);
        return this;
    }

    @Override
    public EmployeeRecord value4(UUID value) {
        setIdchief(value);
        return this;
    }

    @Override
    public EmployeeRecord values(UUID value1, String value2, UUID value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(UUID id, String workername, UUID idorg, UUID idchief) {
        super(Employee.EMPLOYEE);

        set(0, id);
        set(1, workername);
        set(2, idorg);
        set(3, idchief);
    }
}
